{"version":3,"sources":["components/PadItem.js","reducers/operator.js","components/Screen.js","Calculator.js","App.js","reducers/index.js","reducers/result.js","index.js","actions/index.js","components/Pad.js"],"names":["PadItem","props","id","className","style","onClick","symbol","operatorReducer","state","action","type","concat","keyName","x","split","pop","newState","join","eval","operatorString","toString","Operator","operator","useSelector","Result","result","resultReducer","Screen","Calculator","Pad","App","allReducers","combineReducers","undefined","data","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","operatorReset","operatorBack","operatorEqual","operatorCurrentString","operatorResult","dispatch","useDispatch","isMatch","regex","RegExp","matchedItems","match","length","regex2","keyList","handleClick","element","useEffect","PadItems","map","e","background"],"mappings":"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","file":"static/js/main.9e514c10.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction PadItem(props) {\r\n    return (\r\n        <div\r\n            id={props.id}\r\n            className=\"bg-gray-600 text-white cursor-pointer aspect-w-2 aspect-h-1\"\r\n            style={props.style}\r\n            onClick={props.onClick}>\r\n            <div \r\n                className=\"flex justify-center items-center font-bold text-2xl\">\r\n                {props.symbol}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PadItem","/**\r\n ** OPERATOR REDUCER\r\n ** Manage the state of operator that show on the screen\r\n */\r\nexport const operatorReducer = (state = \" \", action) => {\r\n\r\n    switch(action.type) {\r\n        case \"operatorString\":\r\n            return state.concat(action.keyName)\r\n        case \"operatorReset\":\r\n            return \"\"\r\n        case \"operatorBack\":\r\n            let x = state.split(\"\")\r\n            x.pop()\r\n            let newState = x.join(\"\")\r\n            return newState\r\n        case \"operatorEqual\":\r\n            return eval(action.operatorString).toString()\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport { useSelector } from \"react-redux\"\r\n\r\nfunction Operator() {\r\n    const operator = useSelector(state => state.operatorReducer)\r\n    return (\r\n        <span className=\"text-lg h-10\">{operator}</span>\r\n    )\r\n}\r\n\r\nfunction Result() {\r\n    const result = useSelector(state => state.resultReducer)\r\n    return (\r\n        <span className=\"text-4xl h-16\">{result}</span>\r\n    )\r\n}\r\n\r\nfunction Screen() {\r\n    return (\r\n        <div className=\"flex flex-col bg-white text-right font-bold font-mono px-4 py-8\">\r\n            <Operator />\r\n            <Result />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Screen","import React from 'react'\r\nimport Screen from './components/Screen'\r\nimport Pad from './components/Pad'\r\n\r\nfunction Calculator() {\r\n    return (\r\n        <div>\r\n            <Screen />\r\n            <Pad />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculator","import React from 'react'\nimport Calculator from \"./Calculator\"\n\nfunction App() {\n  return (\n    <Calculator />\n  );\n}\n\nexport default App;\n","import { operatorReducer } from \"./operator\";\r\nimport { resultReducer } from \"./result\"\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n    operatorReducer,\r\n    resultReducer\r\n})\r\n\r\nexport default allReducers","export const resultReducer = (state = \"\", action) => {\r\n    switch(action.type) {\r\n        case \"result\":\r\n            return action.data != undefined && action.data\r\n        default: \r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport allReducers from \"./reducers\"\nimport { Provider } from \"react-redux\"\nimport { createStore } from \"redux\"\n\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","export const operatorString = (keyName) => {\r\n    return {\r\n        type: \"operatorString\",\r\n        keyName\r\n    }\r\n}\r\n\r\nexport const operatorReset = () => {\r\n    return {\r\n        type: \"operatorReset\"\r\n    }\r\n}\r\n\r\nexport const operatorBack = () => {\r\n    return {\r\n        type: \"operatorBack\"\r\n    }\r\n}\r\n\r\nexport const operatorEqual = (operatorString) => {\r\n    return {\r\n        type: \"operatorEqual\",\r\n        operatorString,\r\n    }\r\n}\r\n\r\nexport const result = (data) => {\r\n    return {\r\n        type: \"result\",\r\n        data,\r\n    }\r\n}","import React from 'react'\r\nimport PadItem from './PadItem'\r\nimport { operatorString, operatorReset, operatorBack, operatorEqual, result } from '../actions'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useEffect } from \"react\"\r\n\r\nfunction Pad() {\r\n\r\n    const operatorCurrentString = useSelector(state => state.operatorReducer)\r\n    const operatorResult = useSelector(state => state.resultReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    // ? Check if the state operater matchs the string \"+, -, *, /\" at the beginning and the bottom of the tring\r\n    const isMatch = () => {\r\n        const regex = new RegExp(/^(\\+|\\-|\\*|\\/)|(\\+|\\-|\\*|\\/)$/, \"g\")\r\n        const matchedItems = operatorCurrentString.match(regex)\r\n        if (matchedItems === null) {\r\n            return false\r\n        } else {\r\n            return matchedItems.length !== 0 ? true : false\r\n        }\r\n    }\r\n\r\n    // ? Match 2 or more +, -, *, /\r\n    const regex2 = new RegExp(/\\D{2,}/, \"g\")\r\n\r\n    const keyList = [\r\n        \"AC\",\r\n        \"<\",\r\n        \"/\",\r\n        \"7\",\r\n        \"8\",\r\n        \"9\",\r\n        \"*\",\r\n        \"4\",\r\n        \"5\",\r\n        \"6\",\r\n        \"-\",\r\n        \"1\",\r\n        \"2\",\r\n        \"3\",\r\n        \"+\",\r\n        \"=\",\r\n        \"0\",\r\n        \".\"\r\n    ]\r\n\r\n    const handleClick = (element) => {\r\n        if(element === \"AC\") {\r\n\r\n            dispatch(operatorReset())\r\n            dispatch(result(\"\"))\r\n\r\n        } else if (element === \"<\") {\r\n\r\n            dispatch(operatorBack())\r\n\r\n        } else if(element === \"=\") {\r\n\r\n            dispatch(result(eval(operatorCurrentString)))\r\n            dispatch(operatorEqual(operatorCurrentString))\r\n\r\n        } else {\r\n\r\n            dispatch(operatorString(element))  \r\n\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if (!isMatch()) {\r\n            return dispatch(result(eval(operatorCurrentString)))\r\n        }\r\n        if (operatorCurrentString.match(regex2) !== null) {\r\n            dispatch(operatorReset())\r\n        }\r\n    }, [operatorCurrentString])\r\n\r\n    const PadItems = () => {\r\n        return keyList.map(e => \r\n            <PadItem \r\n                key={e} \r\n                id={\r\n                    e === \"+\" ? \"key-plus\" :\r\n                    e === \"-\" ? \"key-minus\" :\r\n                    e === \"*\" ? \"key-multiply\" :\r\n                    e === \"/\" ? \"key-division\" :\r\n                    e === \".\" ? \"key-decimal\" :\r\n                    e === \"=\" ? \"key-equal\" :\r\n                    e === \"<\" ? \"key-back\" :\r\n                    `key-${e}`\r\n                }\r\n                style={{ background: `${e === \"AC\" && \"#d17354\"}` }}\r\n                symbol={e} \r\n                onClick={() => handleClick(e)}\r\n                />\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-4\">\r\n            { PadItems() }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pad"],"sourceRoot":""}